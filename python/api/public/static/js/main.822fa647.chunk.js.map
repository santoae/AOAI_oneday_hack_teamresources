{"version":3,"sources":["images/logo.png","components/BotMessage.jsx","components/UserMessage.jsx","components/Messages.jsx","components/Input.jsx","components/FloatingForm.jsx","ChatbotAPI.js","components/Header.jsx","index.js"],"names":["module","exports","__webpack_require__","p","BotMessage","_ref","fetchMessage","isLoading","setLoading","useState","message","setMessage","useEffect","async","msg","loadMessage","React","createElement","className","UserMessage","text","Messages","messages","el","useRef","current","scrollIntoView","block","behavior","id","ref","Input","onSend","setText","onSubmit","e","preventDefault","type","onChange","target","value","placeholder","version","xmlns","width","height","viewBox","points","FloatingForm","updateLogoUrl","formData","setFormData","firstName","lastName","yearOfBirth","city","country","favoriteBand","isModalOpen","setIsModalOpen","handleChange","name","[object Object]","onClick","openModal","class","closeModal","console","log","for","API","GetChatbotResponse","Promise","resolve","reject","fetch","method","body","JSON","stringify","headers","Content-Type","then","response","json","data","catch","error","Header","logoUrl","src","LogoImage","Chatbot","setMessages","setLogoUrl","key","loadWelcomeMessage","newMessages","concat","length","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.822fa647.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.9b97c341.png\";","import React, { useState, useEffect } from \"react\";\n\nexport default function BotMessage({ fetchMessage }) {\n  const [isLoading, setLoading] = useState(true);\n  const [message, setMessage] = useState(\"\");\n\n  useEffect(() => {\n    async function loadMessage() {\n      const msg = await fetchMessage();\n      setLoading(false);\n      setMessage(msg);\n    }\n    loadMessage();\n  }, [fetchMessage]);\n\n  return (\n    <div className=\"message-container\">\n      <div className=\"bot-message\">{isLoading ? \"...\" : message}</div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function UserMessage({ text }) {\n  return (\n    <div className=\"message-container\">\n      <div className=\"user-message\">{text}</div>\n    </div>\n  );\n}\n","import React, { useEffect, useRef } from \"react\";\n\nexport default function Messages({ messages }) {\n  const el = useRef(null);\n  useEffect(() => {\n    el.current.scrollIntoView({ block: \"end\", behavior: \"smooth\" });\n  });\n  return (\n    <div className=\"messages\">\n      {messages}\n      <div id={\"el\"} ref={el} />\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\n\nexport default function Input({ onSend }) {\n  const [text, setText] = useState(\"\");\n\n  const handleInputChange = e => {\n    setText(e.target.value);\n  };\n\n  const handleSend = e => {\n    e.preventDefault();\n    onSend(text);\n    setText(\"\");\n  };\n\n  return (\n    <div className=\"input\">\n      <form onSubmit={handleSend}>\n        <input\n          type=\"text\"\n          onChange={handleInputChange}\n          value={text}\n          placeholder=\"Enter your message here\"\n        />\n        <button>\n          <svg\n            version=\"1.1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"20\"\n            height=\"20\"\n            viewBox=\"0 0 500 500\"\n          >\n            <g>\n              <g>\n                <polygon points=\"0,497.25 535.5,267.75 0,38.25 0,216.75 382.5,267.75 0,318.75\" />\n              </g>\n            </g>\n          </svg>\n        </button>\n      </form>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport './FloatingForm.css'; // Import the stylesheet\n\nconst FloatingForm = ({ updateLogoUrl }) => {\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    yearOfBirth: '',\n    city: '',\n    country: '',\n    favoriteBand: '',\n  });\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // You can add your form submission logic here\n    console.log('Form data submitted:', formData);\n    updateLogoUrl(\"https://www.example.com/logo.png\"); // Update the logo URL\n    setIsModalOpen(false); // Close the modal after submission\n  };\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <div className=\"floating-form-container\">\n        <button onClick={openModal}>Create your Avatar</button>\n        {isModalOpen && (\n            <div className=\"modal-overlay\">\n            <div className=\"modal\">\n                <div class=\"close-btn-header\">\n                    <span className=\"close-btn\" onClick={closeModal}>\n                        &times;\n                    </span>\n                </div>\n\n                <form onSubmit={handleSubmit} className=\"floating-form\">\n                    <label for=\"firstName\">\n                    First Name:\n                    </label>\n                    <input\n                        type=\"text\"\n                        name=\"firstName\"\n                        value={formData.firstName}\n                        onChange={handleChange}\n                    />\n                    <br />\n\n                    <label>\n                    Last Name:\n                    <input\n                        type=\"text\"\n                        name=\"lastName\"\n                        value={formData.lastName}\n                        onChange={handleChange}\n                    />\n                    </label>\n\n                    <label>\n                    Year of Birth:\n                    <input\n                        type=\"text\"\n                        name=\"yearOfBirth\"\n                        value={formData.yearOfBirth}\n                        onChange={handleChange}\n                    />\n                    </label>\n\n                    <label>\n                    City:\n                    <input\n                        type=\"text\"\n                        name=\"city\"\n                        value={formData.city}\n                        onChange={handleChange}\n                    />\n                    </label>\n\n                    <label>\n                    Country:\n                    <input\n                        type=\"text\"\n                        name=\"country\"\n                        value={formData.country}\n                        onChange={handleChange}\n                    />\n                    </label>\n\n                    <label>\n                    Favorite Band:\n                    <input\n                        type=\"text\"\n                        name=\"favoriteBand\"\n                        value={formData.favoriteBand}\n                        onChange={handleChange}\n                    />\n                    </label>\n\n                    <button type=\"submit\">Submit</button>\n                </form>\n            </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default FloatingForm;\n","const API = {\n  GetChatbotResponse: async message => {\n    return new Promise(function(resolve, reject) {\n      if (message === \"hi\") \n        resolve(\"Welcome to chatbot!\");\n      else {\n        // Call the chatbot API sending POST request\n        // with the message as the body to the API endpoint /chat\n        fetch('/chat', {\n          method: 'POST',\n          body: JSON.stringify({ \"message\": message }),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        })\n          .then(response => response.json())\n          .then(data => resolve(data))\n          .catch(error => reject(error));\n\n        resolve(\"echo : \" + message);\n\n      }         \n    });\n  }\n};\n\nexport default API;\n","import React from \"react\";\nimport LogoImage from \"../images/logo.png\";\n\nexport default function Header({ logoUrl}) {\n  return <div className=\"header\">\n    <div class=\"header-text\">Your Personal Movie Assistant</div>\n    <div class=\"header-logo\"><img src={logoUrl ? logoUrl : LogoImage} width=\"100px\" /></div></div>;\n}","import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport BotMessage from \"./components/BotMessage\";\nimport UserMessage from \"./components/UserMessage\";\nimport Messages from \"./components/Messages\";\nimport Input from \"./components/Input\";\nimport FloatingForm from \"./components/FloatingForm\";\n\nimport API from \"./ChatbotAPI\";\n\nimport \"./styles.css\";\nimport Header from \"./components/Header\";\n\nfunction Chatbot() {\n  const [messages, setMessages] = useState([]);\n  const [logoUrl, setLogoUrl] = useState(\"\");\n\n  useEffect(() => {\n    async function loadWelcomeMessage() {\n      setMessages([\n        <BotMessage\n          key=\"0\"\n          fetchMessage={async () => await API.GetChatbotResponse(\"hi\")}\n        />\n      ]);\n    }\n    loadWelcomeMessage();\n  }, []);\n\n  const updateLogoUrl = (value) => {\n    setLogoUrl(value);\n  }\n\n  const send = async text => {\n    const newMessages = messages.concat(\n      <UserMessage key={messages.length + 1} text={text} />,\n      <BotMessage\n        key={messages.length + 2}\n        fetchMessage={async () => await API.GetChatbotResponse(text)}\n      />\n    );\n    setMessages(newMessages);\n  };\n\n  return (\n    <div className=\"chatbot\">\n      <Header logoUrl={logoUrl}/>\n      <Messages messages={messages} />\n      <Input onSend={send} />\n\n      <FloatingForm updateLogoUrl={updateLogoUrl} />\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<Chatbot />, rootElement);\n"],"sourceRoot":""}